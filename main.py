
# Telegram bot для ОБО

import telebot
import botan
import os
from flask import Flask, request

token = "504515728:AAHWnfcPlz8VZ3SaPKEEJ3swFo8DjcdgKtg"
bo_key = "dcbd8385-9028-44e8-8330-2c7ef54cd963"
ids = "141240553, 28101889, 431189131, 132565429, 205582007, 121196138, 356620991, 198602379, 96930603," \
      " 457814084, 120976534, 454919985, 453312645, 387800936, 340635048, 411517564, 453693657," \
      " 499787765, 340223958, 494706931, 447398682, 477849888, 482829583, 287206886, 385569705, 491316821, 400718615," \
      " 387702503, 231909975, 311618518, 420407844, 477130173, 231190975, 450539036, 471986520, 468431416, 462347281," \
      " 474366873, 494013850, 502001979, 79723328, 118290011, 130707857, 153737706, 164715271, 240888024," \
      " 244692547, 245464469, 246981446, 247429130, 259606362, 271899561, 279547226, 289722479, 291714802, 292567119," \
      " 297699870, 301593727, 305123889, 305409919, 309167953, 310806486, 311555310, 311666732, 312236083, 312755583," \
      " 315339321, 315620653, 319614376, 319952949, 320546796, 321619381, 322541730, 322784656, 325139178, 325254291," \
      " 325268529, 325374658, 326155610, 328292372, 329580466, 331427972, 333490140, 335206996, 338151665, 343036143," \
      " 344208970, 347209476, 349000882, 349437813, 349734114, 357015017, 359870004, 360079016, 361487835, 361943503," \
      " 362435197, 371444636, 377359817, 378291537, 383087599, 392814127, 401538678, 404101531, 404629677, 406527869," \
      " 407006081, 407275770, 410620371, 416386968, 419605878, 428312870, 436071257, 440710292, 441024898, 457412827," \
      " 459278338, 460770177, 460771463, 461572949, 466585879, 467624903, 471421960, 473152172, 475706125, 480899412," \
      " 481856917, 482788659, 487169249, 488022221, 488703873, 489241953, 490456471, 495366813, 500948842, 501576526," \
      " 503470586, 505632525, 506131843, 506754136, 507355407, 508144527, 513002766, 521729855, 531241024, 532948368," \
      " 535777530, 540873084, 547785940, 549455587, 400980475, 463009484, 436280827, 342758667, 339213503," \
      "	299271655, 96038983, 229073111,	329296550, 508133952, 474963331, 507762409, 460426622," \
      "	466418926, 404388688, 506552514, 455283510, 393200727, 461032731, 490049044, 341542780, 434718705," \
      " 296928239, 452224791, 450684789, 346663264, 422921836, 501140332,509371094, 480290212, 378489218, 465116383," \
      " 440078160, 131024713, 405876444, 186169883, 498039331, 435300788, 498121512, 209346330, 231506825," \
      " 485069753, 437489739, 506129355, 476958144, 495250724, 456064746, 502532484, 492503819, 462879709," \
      " 422875042, 474916662, 477767366, 470115516, 480290212, 378489218, 509371094, 478627590, 271288640, 509219293," \
      " 502800711, 386466636, 410086148, 455165715, 411041457, 470675835, 457146870, 284413404, 483416460," \
      " 507954829, 471471323, 463890819, 435559261, 425026026, 363893728, 328482020, 269155730, 82904619," \
      " 204981432, 375584421, 470421735, 162707958, 460703513, 281765004, 369454274, 502486453, 400754433," \
      " 403869707, 260008849, 357404956, 384585098, 465555081, 241251720, 440667252, 340029819, 215300192," \
      " 59474922, 496357502, 91270812, 250565329, 446970111, 378133701, 343402857, 309594274, 272513061," \
      " 288454451, 428689965, 347820435, 147014808, 194236918, 253436887, 158300400, 437917848, 403195777," \
      " 452690327, 394658539, 498382334, 459651747, 402652372, 496874808, 473559068, 459892372, 457442742," \
      " 468349625, 420788519, 508227106, 483032481, 372983385, 428332020, 344813668, 480405403, 207727242," \
      " 477566731, 475349143, 332547090, 486987912, 381673515, 472987989, 382730908, 474985906, 427599187," \
      " 386162803, 438305513, 500133287, 370087450, 468259148, 491423020, 428914153, 332979417, 503492945," \
      " 400141330, 473379806, 372421692, 445817606, 504807100, 465333884, 462398371, 508814486, 491552387," \
      " 402652372, 504131237, 471413422, 413266189, 395129545, 351983012, 270472193, 470175268, 493907426," \
      " 505002325, 489070566, 459892372, 380000111, 451425146, 495224493, 490348166, 490500070, 307484469," \
      " 403346075, 498355718, 503412936, 467960646, 480370028, 409583995, 481463997, 494918238, 315533151," \
      " 506452773, 471317634, 458591201, 450261749, 447252887, 461913182, 386751402, 490277859, 495656198," \
      " 496593527, 507980413, 393186815, 506127334, 499553626, 396682873, 377050175, 393506184, 382730908," \
      " 410602090, 478501607, 427599187, 410173532, 529981490, 474917270, 541822324, 458240500, 528338105, 121420789," \
      " 444060685, 509917939, 481582677, 503373266, 348414834, 384432431, 475381334, 505015181, 484914687, 508102503," \
      " 409803662, 509229821, 463502187, 330675028, 440281921, 490532160, 473936437, 502546327, 489851852, 385812890," \
      " 501791905, 422690203, 472008703, 488299772, 358392049, 482345294, 465842677, 410076375, 465040889, 465040889," \
      " 478969587, 507714585, 331157249, 509658653, 369409756, 495931432, 457643936, 479408345, 467389188, 481303597," \
      " 4534711516, 479483111, 503706175, 493068769, 407906602, 497048985, 480321800, 352284483, 374690083, 505317948," \
      " 489559559, 470498483, 471749962, 457502229, 479767306, 319452095, 361327873, 502763255, 284060732, 490299989," \
      " 475613210, 498295669, 466817802, 463071059, 273216794, 480741323, 490952017, 457363412, 459051485, 488497185," \
      " 354957038, 456494074, 460365145, 507965834, 277950479, 470524855, 402299995, 459921613, 465427722, 480612264," \
      " 448787109, ‎446202250, 480874850, 399042759, 489788531, 507911675, 507346294, 445967085, 314939845, 484098893," \
      " 486501362, 507706677, 464614127, 453016320, 509429593, 479724240, 476836565, 495421439, 462149416, 495789669," \
      " 304482819, 498845433, 490850809, 502784263, 490823007, 463491884, 493530463, ‎507542732, ‎433384259, 287330546," \
      " 191771121, 209934695, 489099206, 504759023, 475739887, 490600926, 401325055, 495096716, 458057257, 488690851," \
      " 464746496, 457874344, 439952475, 496258467, 495548901, 405398599, 401855210, 505198355, 486943702, 420684272," \
      " 477393547, 452871349, 338126451, 402207917, 461151564, 490832161, 505422967, 484524667, 464197054, 259843696," \
      " 487438554, 363893728, 463863413, 303275249, 186782027, 503521997, 171494907, 277527191, 477315164, 120810223," \
      " 91265895, 161597588, 59048183, 3985319842, 448104105, 328242510, 314608986, 316326665, 498950247, 529546143," \
      " 537827766, 370278006"


bot = telebot.TeleBot(token)

server = Flask(__name__)

print(bot.get_me())


def log(message):
    print("\n ---------")
    from datetime import datetime
    print(datetime.now())
    print(" Сообщение от {0} {1}. (id = {2}) \n Текст - {3}".format(message.from_user.first_name,
                                                                    message.from_user.last_name,
                                                                    str(message.from_user.id),
                                                                    message.text))


@bot.message_handler(commands=['start'])
def handle_start(message):
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row('Смена владельца', 'Корректировка РФА')
    user_markup.row('Закрытие абонента', 'Возврат средств')
    user_markup.row('Рег. форма', 'Восст закрыт ном')
    user_markup.row('Подключение b2b', 'Нестандарт')
    bot.send_message(message.from_user.id, 'Добро пожаловать.. ', reply_markup=user_markup)


@bot.message_handler(content_types=['text'])
def handle_text(message):
    log(message)
    if str(message.from_user.id) in ids:
        if message.text == "Смена владельца":
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('В случае смерти частного клиента')
            user_markup.row('С частного на частного клиента')
            user_markup.row('В главное меню')
            bot.send_message(message.from_user.id, 'Выбери нужный пункт', reply_markup=user_markup)
        if message.text == 'В случае смерти частного клиента':
                    bot.send_message(message.chat.id, "ВАЖНО! Переоформление номера в случае смерти владельца возможно"
                                                      " только на законного наследника имущества умершего и только "
                                                      "после"
                                                      " его вступления в права наследования (не ранее 6 месяцев с даты"
                                                      " смерти).")
                    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
                    user_markup.row('Право наследования ещё не наступило')
                    user_markup.row('После вступления в права наследования')
                    user_markup.row('Назад к выбору типа смены')
                    bot.send_message(message.from_user.id, '...', reply_markup=user_markup)
                    botan.track(bo_key, message.chat.id, message, 'Смена владельца')

        if message.text == 'Право наследования ещё не наступило':
                    bot.send_message(message.chat.id, "1. Попроси предъявить оригинал свидетельства о смерти владельца"
                                                      "номера\n"
                                                      "2. Уточни у клиента, как он хотел бы поступить с номером "
                                                      "умершего:"
                                                      " приостановить обслуживание или пользоваться этим номеров и"
                                                      " переоформить на себя\n"
                                                      "3. Проинформируй клиента, что приостановить"
                                                      " обслуживание номера можно будет сейчас."
                                                      " Переоформление номера будет доступно только законному"
                                                      " наследнику после вступления в права наследования при"
                                                      " предъявлении соответствующего документа.\n"
                                                      "4. Позвони на линию 614, чтобы идентифицировать клиента, "
                                                      "оставить"
                                                      " комментарий о смерти владельца и при необходимости"
                                                      " приостановить обслуживание.\n")
                    hide_markup = telebot.types.ReplyKeyboardRemove()
                    bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное '
                                                           'меню', reply_markup=hide_markup)
                    botan.track(bo_key, message.chat.id, message, 'Право наследования ещё не наступило')

        if message.text == 'После вступления в права наследования':
                    bot.send_message(message.chat.id, "1. Попроси клиента предъявить документ, удостоверяющий личность"
                                                      " + оригинал свидетельства о праве на наследство +"
                                                      "свидетельство о смерти\n"
                                                      "2. Проинформируй клиента обо всех условиях услуги: стоимость"
                                                      " услуги и срок внесения данных нового владельца\n"
                                                      "3. Выбери Операции > Регистрация анонимного обращения >"
                                                      " Проверь баланс номера\n"
                                                      "4. Распечатай заявление > Отдай клиенту заявление для"
                                                      " заполнения\n"
                                                      "5. Выбери причину Переоформление > Создать заявку >"
                                                      " Заполни поля заявки > Приложи сканы документов"
                                                      " > Нажми кнопку создать")
                    hide_markup = telebot.types.ReplyKeyboardRemove()
                    bot.send_message(message.from_user.id, '/start для возврата в главное меню',
                                     reply_markup=hide_markup)
                    botan.track(bo_key, message.chat.id, message, 'После вступления в права наследования')

        if message.text == 'С частного на частного клиента':
                    bot.send_message(message.chat.id, 'ВАЖНО! Переоформление проводится при присутствии текущего'
                                                      ' и будущего владельцев и при предъявлении ими документов'
                                                      ', удостоверяющих личность\n\n Зайди в карточку клиента с'
                                                      ' помощь номера телефона'
                                                      ' + номера документа удостоверяющего личность\nУточни в'
                                                      ' карточке клиента, был ли номер '
                                                      'ранее перенесен из другой сети по MNP')
                    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
                    user_markup.row('Номер НЕ был перенесен из другой сети')
                    user_markup.row('Номер БЫЛ перенесен из другой сети')
                    user_markup.row('Назад к выбору типа смены')
                    bot.send_message(message.from_user.id, '...', reply_markup=user_markup)
                    botan.track(bo_key, message.chat.id, message, 'С частного на частного клиента')

        if message.text == 'Номер НЕ был перенесен из другой сети':
                    bot.send_message(message.chat.id, "1. Проинформируй клиента обо всех условиях услуги:"
                                                      " стоимость услуги и срок внесения данных нового владельца\n"
                                                      "2. Проверь баланс на номере и подключена"
                                                      " ли услуга «Обещанный платеж» > Открой вкладку Платежи"
                                                      ", если ДА - сообщи клиенту о "
                                                      "необходимости пополнить баланс на сумму, равную сумме"
                                                      " обещанного платежа + стоимость за переоформление\n"
                                                      "3. Распечатай заявление на переоформление> Отдай на заполнение"
                                                      " заявление абоненту > Обязательно\n"
                                                      "<b>Оформи РФА</b> на будущего владельца номера\n"
                                                      "4. Открой вкладку «Регистрация обращений»"
                                                      " в карточке клиента > Выбери"
                                                      " причину Переоформление > Создать заявку\n"
                                                      "5. Заполни необходимые поля"
                                                      " заявки и <b>приложи скан заявления и РФА</b>"
                                                      " Нажми кнопку создать\n", parse_mode="HTML")
                    hide_markup = telebot.types.ReplyKeyboardRemove()
                    bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                     reply_markup=hide_markup)
                    botan.track(bo_key, message.chat.id, message, 'Номер клиента НЕ был перенесен из другой сети')

        if message.text == 'Номер БЫЛ перенесен из другой сети':
                    bot.send_message(message.chat.id, "1. Проинформируй клиента обо"
                                                      " всех условиях услуги: стоимость услуги и срок внесения"
                                                      " данных нового владельца\n"
                                                      "2. Проверь баланс на номере и подключена"
                                                      " ли услуга «Обещанный платеж»"
                                                      " > Открой вкладку Платежи, если ДА - сообщи клиенту "
                                                      "о необходимости"
                                                      " пополнить баланс на сумму, равную сумме обещанного"
                                                      " платежа + стоимость за переоформление\n"
                                                      "3. Распечатай соглашение на переуступку прав >"
                                                      " Отдай клиенту заявление для заполнения\n"
                                                      "4. Открой вкладку «Регистрация обращений» в"
                                                      " карточке клиента > Выбери причину Переоформление"
                                                      " > Создать заявку\n"
                                                      "5. Заполни необходимые поля заявки и приложи"
                                                      " скан соглашения > Нажми кнопку создать\n")
                    hide_markup = telebot.types.ReplyKeyboardRemove()
                    bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                     reply_markup=hide_markup)
                    botan.track(bo_key, message.chat.id, message, 'Номер клиента БЫЛ перенесен из другой сети')

        if message.text == 'Назад к выбору типа смены':
                    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
                    user_markup.row('В случае смерти частного клиента')
                    user_markup.row('С частного на частного клиента')
                    user_markup.row('В главное меню')
                    bot.send_message(message.from_user.id, 'Выбери нужный пункт', reply_markup=user_markup)

        if message.text == 'В главное меню':
                    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
                    user_markup.row('Смена владельца', 'Корректировка РФА')
                    user_markup.row('Закрытие абонента', 'Возврат средств')
                    user_markup.row('Рег. форма', 'Восст закрыт ном')
                    user_markup.row('Подключение b2b', 'Нестандарт')
                    bot.send_message(message.from_user.id, 'Добро пожаловать..', reply_markup=user_markup)

        if message.text == 'Подключение b2b':
                    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
                    user_markup.row('Юридич. лицо/организация')
                    user_markup.row('ИП')
                    user_markup.row('В главное меню')
                    bot.send_message(message.from_user.id, 'Выбери нужный пункт', reply_markup=user_markup)

        if message.text == 'Юридич. лицо/организация':
                    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
                    user_markup.row('Необходимые документы')
#                   user_markup.row('Процедура подключения')
                    user_markup.row('В главное меню')
                    bot.send_message(message.from_user.id, 'Выбери нужный пункт', reply_markup=user_markup)

        if message.text == 'Необходимые документы':
            bot.send_message(message.chat.id, "<b>Необходимые документы:</b>\n"
                                                      "1. Оригинал или копия свидетельства о государственной"
                                                      " регистрации юридического лица.\n"
                                                      "2. Оригинал или копия свидетельства о постановке на учет"
                                                      " российской организации в налоговом органе по месту ее"
                                                      " нахождения и/или уведомления о постановке на"
                                                      " учет в налоговом органе.\n"
                                                      "3. Оригинал, копия или выписка из решения или протокола"
                                                      " юридического лица об избрании руководителя юридического лица.\n"
                                                      "4. Оригинал доверенности на заключение договора об оказании"
                                                      " услуг связи с Tele2. Предоставляется при подписании договора"
                                                      " через представителя, не являющегося руководителем юридического"
                                                      " лица. Рекомендуемая форма доверенности Tele2.\n"
                                                      "5. Документ, удостоверяющий личность лица, подписывающего"
                                                      " договор об оказании услуг связи.", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                             reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Подключение b2b/Юридическое лицо/Необходимые документы')

        if message.text == 'ИП':
                    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
                    user_markup.row('Список документов')
#                    user_markup.row('Процесс подключения')
                    user_markup.row('В главное меню')
                    bot.send_message(message.from_user.id, 'Выбери нужный пункт', reply_markup=user_markup)

        if message.text == 'Список документов':
            bot.send_message(message.chat.id, "<b>Список документов:</b>\n"
                                              "1. Оригинал или копия свидетельства о государственной"
                                              " регистрации физического лица в качестве"
                                              " индивидуального предпринимателя\n"
                                              "2. Оригинал или копия свидетельства о постановке на учет физического"
                                              " лица в налоговом органе и/или уведомления о постановке"
                                              " на учет в налоговом органе.\n"
                                              "3. Оригинал доверенности на заключение договора об оказании"
                                              " услуг связи с Tele2, удостоверенной нотариусом. Предоставляется при"
                                              " подписании договора через представителя индивидуального"
                                              " предпринимателя. Рекомендуемая форма доверенности Tele2. \n"
                                              "4.	Документ, удостоверяющий личность лица, подписывающего"
                                              " договор об оказании услуг связи.", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                             reply_markup=hide_markup)



        if message.text == 'Помощь' or message.text == 'help' or message.text == '/help' or message.text == 'подсказка' or message.text == 'контакты' or message.text == 'контакт':
            bot.send_message(message.chat.id, "Мои возможности весьма специфичны. Но я работаю над собой.\n"
                                              " Для начала работы рекомендую набрать команду /start\n"
                                              " По всем вопросам, предложениям или пожеланиям пишите на"
                                              " мой почтовый ящик: alexander.s.alekseev@tele2.ru, указывая"
                                              " в заголовке письма ОС BOT. Мне очень важно значать"
                                              " Ваше мнение. Спасибо!")
            botan.track(bo_key, message.chat.id, message, 'Помощь')

        if message.text == 'Закрытие абонента':
            bot.send_message(message.chat.id, "ВАЖНО! Расторжение возможно только"
                                              " при присутствии владельца номера и предъявлении"
                                              " им документа, удостоверяющего личность.\n"
                                              "1.  Уточни причину расторжения договора\n"
                                              "2. Постарайся сохранить клиента. Выявив причину расторжения,"
                                              " предложи способ уладить проблему, с которой"
                                              " столкнулся клиент, без расторжения. Например,"
                                              " составить претензию.\n"
                                              "3. Если сохранить клиента не удалось, то зайди в карточку клиента"
                                              " с помощью номера телефона + номера документа, удостоверяющего "
                                              "личность\n"
                                              "4. Проверь закладу комментарии на наличие сообщения о запрете возврата"
                                              " денежных средств при расторжении. Если данный комментарий"
                                              " присутствует, оформляй расторжение без возврата денежных средств\n"
                                              "5. Зайди в закладку Балансы/Квоты, чтобы проверить состояние"
                                              " всех балансов"
                                              ". Если основной баланс номера отрицательный, сообщи клиенту, что ему"
                                              " необходимо погасить задолженность т.к."
                                              " в противном случае расторжение будет невозможно.\n"
                                              "Если на контентном лицевом счете есть денежные средства, то"
                                              " попроси клиента самостоятельно перевести"
                                              " деньги на основной баланс, используя команду. *160*СУММА*0#\n"
                                              "6. Измени статус клиента на Блокирован >"
                                              " Распечатай и подпиши заявление > Подтверди изменение статуса\n"
                                              "7. Распечатай заявление на расторжение"
                                              " > Отдай на заполнение клиенту\n"
                                              "8. В закладке регистрация обращений выбери"
                                              " причину <b>Изменение статуса SIM: Закрытие</b>\n"
                                              "9. Заполни поля заявки > Прикрепи заявление"
                                              " > Нажми кнопку создать\n"
                                              "10. Уточни у клиента, привязан ли данный номер телефона"
                                              " к банковским картам > Сообщи о необходимости самостоятельно"
                                              " отвязать номер от банковских карт. При расторжении договора"
                                              " банки автоматический не отключают услугу «Мобильный банк».\n"
                                              "Если банковская карта клиента привязана к данному номеру"
                                              " телефона, клиенту необходимо обратиться для его"
                                              " отключения в банк самостоятельно. ", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню', reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Закрытие абонента')

        if message.text == 'Корректировка РФА':
            bot.send_message(message.chat.id, "ВАЖНО! Изменение регистрационных данных клиента доступно текущему"
                                                  " владельцу номера при предъявлении им документа, "
                                                  "удостоверяющего"
                                                  " личность, и только в следующих случаях:\n"
                                                  "1. <b>Ошибка</b>, допущенная  при"
                                                  "  внесении регистрационных данных\n"
                                                  "2. <b>Замена документа</b>, удостоверяющего личность,"
                                                  " в связи со сменой фамилии, по факту достижения"
                                                  " определенного возраста, в связи с утерей паспорта и пр.\n"
                                                  "3. Если номер попадает под условия процедуры"
                                                  " онлайн корректировки, то сделай онлайн корректировку.\n"
                                                  "Если необходимо изменить владельца номера, то"
                                                  " следуй инструкции по Переоформлению номера"
                                                  " с одного частного клиента на другого.", parse_mode="HTML")
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('Исправление очевидной ошибки')
            user_markup.row('Смена документа / не очевидная ошибка')
            user_markup.row('В главное меню')
            bot.send_message(message.from_user.id, '...', reply_markup=user_markup)
            botan.track(bo_key, message.chat.id, message, 'Корректировка РФА')

        if message.text == 'Исправление очевидной ошибки':
            bot.send_message(message.chat.id, "Зайди в карточку клиента. Если карточка открылась"
                                                  " - следуй инструкции по онлайн корректировке данных.\n"
                                                  "Если не удалось авторизоваться в карточке клиента, то:\n"
                                                  "- позвони на линию 614, назови своё ФИО и код точки\n"
                                                  "- Сообщи, что необходимо исправить очевидную"
                                                  " ошибку в регистрационных данных\n"
                                                  "- Назови номер телефона клиента, все данные паспорта\n"
                                                  " и уточни, какие параметры необходимо исправить\n", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню', reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Исправление очевидной ошибки')

        if message.text == 'Смена документа / не очевидная ошибка':
            bot.send_message(message.chat.id, "1. При наличии данных предыдущего документа,"
                                                  " удостоверяющего личность, зайди в карточку"
                                                  " клиента при номера телефона и номера документа."
                                                  " При их отсутствии открой окно Операции"
                                                  " > Регистрация Анонимного обращения\n"
                                                  "2. Проинформируй клиента об условиях внесения"
                                                  " данных: необходимость оформления заявления,"
                                                  " наличие документа, удостоверяющего личность,"
                                                  " срок внесения новых данных - 72 часа\n"
                                                  "3. Распечатай заявление"
                                                  " > Отдай на заполнение клиенту\n"
                                                  "4. <b>Сверь данные</b> документа, удостоверяющего личность,"
                                                  " которые предъявил клиент, с данными указанными в заявлении\n"
                                                  "5. Выбери причину обращений «Корректировка"
                                                  " ошибочных регистрационных данных» > Создать заявку\n"
                                                  "6. В открывшемся окне заполни все поля > Приложи"
                                                  " заполненное клиентом <b>заявление</b> > Нажми кнопку создать\n", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Смена документа / не очевидная ошибка')

        if message.text == 'Рег. форма':
            bot.send_message(message.chat.id, "ВАЖНО! Оригиналы РФА отправляются с реестром Абонентских"
                                                  " заявлений отдельно от реестра РФА проданных SIM-карт"
                                                  " по адресу: адрес в регионе, по которому следует отправить"
                                                  " РФА. Отправка оригиналов производится не реже 1 раза в 5 дней.\n"
                                                  "1. Проверяем у абонента наличие сим-карты"
                                                  " и паспорта (документа удостоверяющего личность)\n"
                                                  "2. Заполняем в 2-х экземплярах регистрационную форму"
                                                  " и в ней делаем отметку «Смс-рассылка». Подписываем"
                                                  " 2 экземпляра с абонентом и ставим печать\n"
                                                  "3. Один экземпляр регистрационной формы"
                                                  " отдаем абоненту, второй остается в ЦО для"
                                                  " последующей передачи в Теле2\n"
                                                  "4. Выбери причину обращений «Внесение отсутствующих"
                                                  " регистрационных данных» > Создать\n"
                                                  "5. В открывшемся окне заполни все поля"
                                                  " > Приложи заполненную регистрационную форму"
                                                  " > Нажми кнопку создать. В случае, если номер  блокирован, нужно сделать"
                                                  " звонок на 614 и произвести разблокировку номера  через оператора.\n")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Рег. форма')

        if message.text == 'Возврат средств':
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('Ошибочный платеж')
            user_markup.row('Остаток средств')
            user_markup.row('Запрет возврата аванс. платежа')
            user_markup.row('В главное меню')
            bot.send_message(message.from_user.id, '...', reply_markup=user_markup)

        if message.text == 'Ошибочный платеж':
            bot.send_message(message.chat.id, "ВАЖНО! Возврат ошибочного платежа может быть произведен как"
                                                  " владельцу номера, так и плательщику, который может не"
                                                  " являться владельцем номера. Возврат суммы менее 100"
                                                  " рублей не осуществляется.\n"
                                                  "Возврат платежа на другой номер возможен только,"
                                                  " если номер принадлежит Tele2, на номера других"
                                                  " операторов связи не возвращаем\n"
                                                  "1. Предложи клиенту самостоятельно вернуть"
                                                  " платеж или направить его для оплаты услуг"
                                                  ", используя услуги Мобильной коммерции Tele2"
                                                  " (Денежные переводы, Tele2 Кошелек, Виртуальная карт и пр. )"
                                                  " и Мобильный перевод. Если клиент хочет оформить"
                                                  " возврат через Tele2, то переходи к пункту 2.\n"
                                                  "2. Уточни у клиента, является ли он владельцем"
                                                  " номера и попроси предъявить чек об оплате\n"
                                                  "3. Зайди в карточку клиента при помощи номера"
                                                  " телефона и номера документа, удостоверяющего"
                                                  " личность, если обратился владелец номера > Проверь раздел"
                                                  " комментарии  > Проверь поступление платежа"
                                                  ". <i>При наличии услуги ФЗ-115 проверь запрет авансового платежа.</i>\n"
                                                  "4. Проинформируй об условиях возврата платежа:\n"
                                                  " Возврат может быть осуществлен только"
                                                  " безналичным способом: на банковскую карту,"
                                                  " расчетный счет или другой номер Tele2.\n"
                                                  "Возврат суммы менее 100 рублей не производится\n"
                                                  "Срок возврата денежных средств Tele2 вправе"
                                                  " устанавливать самостоятельно и обычно составляет до 30 дней\n"
                                                  "5. Распечатай заявление > Отдай на заполнение клиенту\n"
                                                  "6. Создай заявку «Перенос баланса,"
                                                  " возврат платежа» > <b>Приложи скан заявления и чека об оплате</b>\n", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Ошибочный платеж')

        if message.text == 'Остаток средств':
            bot.send_message(message.chat.id, "ВАЖНО! Возврат остатка денежных средств может"
                                                  " быть осуществлен владельцу номера при "
                                                  "предъявлении им документа, удостоверяющего личность.\n"
                                                  "Возврат осуществляется только безналичным способом\n"
                                                  "1. Предложи клиенту самостоятельно вернуть "
                                                  "денежные средства или направить их для оплаты"
                                                  "услуг, используя услуги Мобильной коммерции"
                                                  " Tele2 (Денежные переводы, Tele2 Кошелек, "
                                                  "Виртуальная карт и пр. ) и Мобильный перевод."
                                                  " Если клиент хочет оформить возврат"
                                                  " через Tele2, то переходи к пункту 2.\n"
                                                  "2. Зайди в карточку клиента с помощью номера"
                                                  " телефона + номера документа, удостоверяющего личность\n"
                                                  "3. Проверь наличие услуги ФЗ-115 запрета "
                                                  "возврата денежных средств. При наличии услуги"
                                                  " ФЗ-115 переходи к разделу «Запрещено"
                                                  " делать возврат авансового платежа». \n"
                                                  "4. Проверь баланс клиента и уточни сумму доступную к возврату\n"
                                                  "5. Уточни у клиента, какую сумму и каким способом он хотел бы вернуть\n"
                                                  "6. Проинформируй об условиях возврата"
                                                  " платежа: срок рассмотрения заявки и "
                                                  "возврата платежа, необходимые документы\n"
                                                  "Необходимо заполнить заявление и "
                                                  "предъявить документ, удостоверяющий личность\n"
                                                  "Возврат может быть осуществлен только безналичным способом\n"
                                                  "рок возврата денежных средств Tele2 "
                                                  "вправе устанавливать самостоятельно и обычно составляет до 30 дней\n"
                                                  "7. Распечатай заявление > Отдай на заполнение клиенту >"
                                                  " <b>Внимательно проверь корректность заполнения – все поля,"
                                                  " совпадение данных с паспортом.</b>\n"
                                                  "8. В закладке Регистрация обращений "
                                                  "> Укажи причину «Перенос баланса,"
                                                  " возврат средств» > Создать заявку >"
                                                  " <b>Прикрепи скан заявления</b>\n"
                                                  "9. Проинформируй клиента о возможности"
                                                  " самостоятельно провести данную операцию\n"
                                                  "Вы можете самостоятельно осуществить "
                                                  "перевод денежных средств при помощи:\n"
                                                  "мобильного портала *159# , SMS на бесплатный номер 159 "
                                                  "или через специальный сайт money.tele2.ru (для абонентов Tele2), "
                                                  "сайта Tele2.ru раздел Услуги мобильной коммерции\n"
                                                  "Административные и бонусные платежи возврату не подлежат\n", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Остаток средств')

        if message.text == 'Запрет возврата аванс. платежа':
            bot.send_message(message.chat.id, "1. Сообщи клиенту, что остаток денежных средств"
                                                  "не может быть возвращен в силу действующего "
                                                  "российского законодательства.\n"
                                                  "2. В случае несогласия клиента, составь устную"
                                                  " или письменную претензию (если настаивает клиент)"
                                                  " по стандартной инструкции > Укажи в ней полные"
                                                  " данные владельца номера\n"
                                                  "Обязательно укажи полные сведения об абоненте:\n"
                                                  "А. ФИО\n"
                                                  "В. гражданство\n"
                                                  "С. дата рождения\n"
                                                  "D. данные документа, удостоверяющего личность\n"
                                                  "Если иностранный гражданин:\n"
                                                  "данные документа, подтверждающего право иностранного гражданина"
                                                  " или лица без гражданства на пребывание (проживание) в РФ\n"
                                                  "адрес места жительства (регистрации) или места пребывания\n"
                                                  "идентификационный номер налогоплательщика (при его наличии).\n")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Запрет возврата аванс. платежа')

        if message.text == 'Восст закрыт ном':
            bot.send_message(message.chat.id, "ВАЖНО! Проведение данной операции возможно при"
                                                  " присутствии владельца закрытого номера и предъявлении"
                                                  " им оригинала документа, удостоверяющего личность.\n"
                                                  " 1) Звони на линию 614 для уточнения возможности восстановить номер\n"
                                                  "    Проверь владельца номера\n"
                                                  "    Узнай категорию закрытого номера: обычный, серебряный или золотой\n"
                                                  "    Принадлежность закрытого номера региону\n")
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('Клиент в домашнем регионе')
            user_markup.row('Клиент в роуминге')
            user_markup.row('В главное меню')
            bot.send_message(message.from_user.id, '...', reply_markup=user_markup)
            botan.track(bo_key, message.chat.id, message, 'Восст закрыт ном')

        if message.text == 'Клиент в домашнем регионе':
            bot.send_message(message.chat.id, "1. Проинформируй клиента об всех условиях оказания услуги\n"
                                                  "2. Оформи подключение нового номера\n"
                                                  "3. Распечатай заявление (в свободной форме) >"
                                                  " Укажи в заявлении номер телефона и ICC нового комплекта,"
                                                  " восстанавливаемый и контактный номера телефонов\n"
                                                  "4. В карточке клиента выбери вкладку регистрация "
                                                  "обращений > Укажи причину обращения «Нестандартное заявление»"
                                                  " > Создать заявку\n"
                                                  "5. Заполни поля заявки > <b>Прикрепи скан заявления</b>"
                                                  " > Нажми кнопку создать\n"
                                                  "6. Предупреди клиента, что необходимо регулярно использовать SIM-карту,"
                                                  " чтобы избежать закрытия номера\n", parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Клиент в домашнем регионе')

        if message.text == 'Клиент в роуминге':
            bot.send_message(message.chat.id, "ВАЖНО! Восстановление закрытого номера в роуминге возможно только"
                                                  " при наличии sim-карты, к которой ранее был привязан закрытый номер"
                                                  ", и только если категория восстанавливаемого номера – обычный.\n"
                                                  "1. Проинформируй клиента обо всех условиях оказания услуги\n"
                                                  "2. Распечатай заявление в свободной форме > Укажи в"
                                                  " заявлении номер телефона и ICC нового комплекта,"
                                                  " восстанавливаемый и контактный номер\n"
                                                  "3. Открой Операции > Регистрация анонимного обращения"
                                                  " > Нестандартное заявление\n"
                                                  "4. Заполни поля заявки > Прикрепи скан заявления "
                                                  "> Нажми кнопку создать\n"
                                                  "5. Предупреди клиента, что необходимо регулярно использовать"
                                                  " SIM-карту, чтобы избежать закрытия номера в дальнейшем\n")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Клиент в роуминге')

        if message.text == 'Нестандарт':
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('Почему необходим паспорт')
            user_markup.row('Не прошла заявка по MNP')
            user_markup.row('Плата за молчание')
            user_markup.row('Возврат за новую sim')
            user_markup.row('В главное меню')
            bot.send_message(message.from_user.id, '...', reply_markup=user_markup)
            botan.track(bo_key, message.chat.id, message, 'Нестандарт')

        if message.text == 'Почему необходим паспорт':
            bot.send_message(message.chat.id, '<b>ч.1 ст. 19 Гражданского Кодекса РФ</b> установлено, что гражданин'
                                              ' приобретает и осуществляет права и обязанности под своим именем,'
                                              ' включающим фамилию, имя и отчество.\n'
                                              'Согласно положениям действующего законодательства РФ в области оказания'
                                              ' услуг связи, одной из сторон данных правоотношений является абонент -'
                                              ' физическое лицо (гражданин) или юридическое лицо, с которым'
                                              ' заключен договор об оказании услуг связи.\n'
                                              'Поскольку все права и обязанности в части пользования услугами связи'
                                              ' возникают непосредственно у абонента, взаимодействие сторон в рамках'
                                              ' заключенного договора возможно при идентификации личности абонента.\n'
                                              'Идентификация стороны – физического лица, гражданина РФ - происходит на'
                                              ' основании паспорта или иного документа, удостоверяющего личность.\n'
                                              'Согласно Положению о паспорте гражданина Российской Федерации,'
                                              ' утвержденного'
                                              ' Постановлением Правительства РФ от 08.07.1997 г. № 828,'
                                              ' паспорт гражданина Российской Федерации является основным документом,'
                                              ' удостоверяющий личность гражданина Российской Федерации на'
                                              ' территории Российской Федерации.\n'
                                              'аким образом, предоставление документов, удостоверяющих личность,'
                                              ' в салонах обслуживания Tele2 является необходимым'
                                              ' условием правоотношений'
                                              ', возникающих между оператором связи и гражданином при'
                                              ' оказании услуг связи.\n', parse_mode="HTML")
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('В ФЗ о Связи')
            bot.send_message(message.from_user.id, '...', reply_markup=user_markup)
            botan.track(bo_key, message.chat.id, message, 'Почему необходим паспорт - основа')

        if message.text == 'В ФЗ о Связи':
            bot.send_message(message.chat.id, 'Согласно <b>Федеральному Закону от 07.07.2003 №126-ФЗ «О связи»</b>'
                                              ' сведения об Абоненте являются конфиденциальными.\n'
                                              '«Сведения об Абонентах и оказываемых им услугах, ставшие известными'
                                              ' Операторам связи в силу исполнения договора об оказании услуг связи,'
                                              ' являются конфиденциальной информацией и подлежат защите в соответствии'
                                              ' с законодательством Российской Федерации. К сведениям об Абонентах'
                                              ' являются фамилия, имя, отчество или псевдоним Абонента- гражданина,'
                                              ' наименование (фирменное наименование) Абонента- юридического лица,'
                                              ' фамилия, имя, отчество руководителя и работников этого юридического'
                                              ' лица, а также адрес Абонента или адрес установки оконечного оборудования,'
                                              ' абонентские номера и другие данные, позволяющие идентифицировать'
                                              ' Абонента или его оконечное оборудование, сведения баз данных систем'
                                              ' расчета за оказанные услуги связи, в том числе о соединениях,'
                                              ' трафике и платежах Абонента».', parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Почему необходим паспорт - дополнительно')

        if message.text == 'Не прошла заявка по MNP':
            bot.send_message(message.chat.id, 'Смотрим в WD причину отказа:\n'
                                              '<b>Если</b> причина "Не соответствие данных у оператора донора", '
                                              'то направляем абонента к оператору донору для корректировки паспортных'
                                              ' данных\n'
                                              'по истечении суток с момента корректировки паспортных данных абонент'
                                              ' обращается к нам повторно для заведения заявки на перенос номера.\n'
                                              '<b>Если</b> абонент обращается не однократно в Tele2 и сообщает, что'
                                              ' данные у оператора донора скорректировал, но в переносе номер'
                                              'а поступает отказ, то создаем <i>"В переносе отказано-ошибка в '
                                              'данных"</i>.', parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Не прошла заявка по MNP')

        if message.text == 'Плата за молчание':
            bot.send_message(message.chat.id, 'Согласно Правил оказания услуг подвижной радиотелефонной связи ООО'
                                              ' «Т2-Мобайл» созданных на основании Постановления Правительства'
                                              ' РФ от 09.12.2014 N 1342 О порядке оказания услуг телефонной связи"'
                                              ' (вместе с "Правилами оказания услуг телефонной связи": п. 4.1.'
                                              ' Тарифы на все виды услуг связи определяются Оператором самостоятельно.'
                                              ' Тарифы на услуги связи, выбранные Абонентом при заключении Договора,'
                                              ' указываются в тарифном плане, который является неотъемлемой'
                                              ' частью Договора.\n На сайте www.tele2.ru в описании каждого'
                                              ' тарифного плана сообщается, что в случае не совершения'
                                              ' Абонентом действий, влекущих списание денежных средств'
                                              ' за оказанные услуги, в течение последовательно 120 дней'
                                              ' без перерыва, прерывающего в течение указанного срока'
                                              ' или не зачисления денежных средств на лицевой счет Абонента'
                                              ' в течение указанного срока, с лицевого счета Абонента начинает'
                                              ' списываться ежедневная абонентская плата. Абонентская'
                                              ' плата взимается до момента достижения на лицевом счете'
                                              ' Абонента нулевого баланса или зачисления денежных'
                                              ' средств на лицевой счет Абонента.\n В случае нахождения баланса лицевого'
                                              ' счета Абонента равным или ниже нулевой отметки в течение'
                                              ' 180 (ста восьмидесяти) последовательных календарных дней'
                                              ', договор об оказании услуг связи считается'
                                              ' расторгнутым по инициативе Абонента.\n'
                                              'Обращаем Ваше внимание, что расторжение договора с Абонентом происходит'
                                              ' по соглашению сторон. Абонент инициировал наступление условий для'
                                              ' расторжения, это явилось офертой в адрес ООО «Т2-Мобайл», на основании'
                                              ' которой договор расторгается. Указанная возможность для расторжения'
                                              ' договора укладывается в процедуру направления оферты и получения'
                                              ' акцепта, в соответствии с главой 28 Гражданского кодекса РФ.', parse_mode="HTML")
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Плата за молчание')

        if message.text == 'Возврат за новую sim':
            bot.send_message(message.chat.id, 'Согласно Правил оказания услуг подвижной радиотелефонной связи'
                                              ' ООО «Т2-Мобайл» созданных на основании Постановления Правительства'
                                              ' РФ от 09.12.2014 N 1342 О порядке оказания услуг телефонной связи"'
                                              ' (вместе с "Правилами оказания услуг телефонной связи": п. 6.5.'
                                              ' Абонент вправе в любое время расторгнуть Договор в одностороннем'
                                              ' порядке. При наличии у Оператора сведений о потреблении Абонентом'
                                              ' услуги роуминга, услуг контент-провайдеров и иных услуг, оказанных'
                                              ' третьими лицами, процедура расторжения Абонентом Договора'
                                              ' осуществляется после осуществления начислений по роумингу и иным'
                                              ' услугам и оплаты Абонентом фактически оказанных услуг. Неиспользованный'
                                              ' остаток внесенных Абонентом в качестве аванса денежных средств подлежит'
                                              ' возврату Абоненту после расторжения Договора на основании его заявления'
                                              ' в сроки, установленные действующим законодательством РФ.'
                                              ' Таким образом, стартовый баланс (аванс на лицевом счете абонента'
                                              ') подлежит возврату, только в том случае если он не был'
                                              ' израсходован и находится на лицевом счёте.')
            hide_markup = telebot.types.ReplyKeyboardRemove()
            bot.send_message(message.from_user.id, 'Нажмите /start для возврата в главное меню',
                                 reply_markup=hide_markup)
            botan.track(bo_key, message.chat.id, message, 'Возврат за новую sim')

        if message.text == 'привет' or message.text == 'Привет' or message.text == 'privet' or message.text == 'hi' or message.text == 'хай' or message.text == 'йоу' or message.text == 'Здравствуй' or message.text == 'здравствуй':
            bot.send_message(message.chat.id, 'И тебе привет мой, друг! Для начала работы открой меню '
                                              'или напиши /start. Я постараюсь помочь тебе в твоей работе')
            botan.track(bo_key, message.chat.id, message, 'Приветствие')

        if message.text == 'уёбок' or message.text == 'хуй' or message.text == 'пёс' or message.text == 'пидор' or message.text == 'гей':
            bot.send_message(message.chat.id, 'Сам такой')
            botan.track(bo_key, message.chat.id, message, 'Ругань')

        if message.text == ':)' or message.text == ')' or message.text == ':smile:' or message.text == ':о' or message.text == ':*':
            bot.send_message(message.chat.id, ':)')
            botan.track(bo_key, message.chat.id, message, 'Эмоция')

    else:
        bot.send_message(message.chat.id, "Привет неавторизованный пользователь! Обратись к своему тренеру,"
                                          " он тебе расскажет как получить доступ :)")


@server.route("/bot", methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200


@server.route("/")
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url="https://telegram1v1.herokuapp.com/bot")
    return "!", 200

server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
server = Flask(__name__)